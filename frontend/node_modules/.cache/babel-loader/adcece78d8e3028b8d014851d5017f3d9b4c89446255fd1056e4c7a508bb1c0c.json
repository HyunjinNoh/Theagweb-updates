{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noh06\\\\Desktop\\\\Theagweb-rest\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../styles/PostList.css\";\nimport faviconImage from \"../assets/favicon-image.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList({\n  category\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      try {\n        let endpoint = \"http://localhost:7000/api/posts\";\n\n        // 카테고리 필터만\n        if (category) {\n          endpoint += `?category=${encodeURIComponent(category)}`;\n        }\n\n        // 서버에서 API를 호출하여 데이터를 가져옵니다.\n        const response = await fetch(endpoint);\n        if (!response.ok) {\n          const errorText = await response.text(); // HTML 응답을 텍스트로 받기\n          throw new Error(`Error: ${response.status} - ${errorText}`); // 오류 메시지와 함께 응답 내용 출력\n        }\n        const data = await response.json();\n        setPosts(data);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error fetching posts:\", err);\n        setPosts([]);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, [category]); // 카테고리 변경 시마다 데이터를 새로 불러옵니다.\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontWeight: \"bold\",\n          margin: \"20px 0\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  if (!posts.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontWeight: \"bold\",\n          margin: \"20px 0\"\n        },\n        children: \"\\uD574\\uB2F9 \\uCE74\\uD14C\\uACE0\\uB9AC\\uC758 \\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: [category && /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontWeight: \"bold\",\n        margin: \"20px 0\"\n      },\n      children: [\"Category: \\\"\", category, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      onClick: () => navigate(`/posts/${post._id}`),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Category: \", post.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: faviconImage,\n        className: \"favicon-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"TkMLCTgq4QJSt38BDvBCFsK26OU=\", false, function () {\n  return [useNavigate];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","faviconImage","jsxDEV","_jsxDEV","PostList","category","_s","posts","setPosts","loading","setLoading","error","setError","navigate","fetchPosts","endpoint","encodeURIComponent","response","fetch","ok","errorText","text","Error","status","data","json","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","margin","length","map","post","onClick","_id","title","src","_c","$RefreshReg$"],"sources":["C:/Users/noh06/Desktop/Theagweb-rest/frontend/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../styles/PostList.css\";\nimport faviconImage from \"../assets/favicon-image.png\";\n\nfunction PostList({ category }) {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n\n      try {\n        let endpoint = \"http://localhost:7000/api/posts\"; \n\n        // 카테고리 필터만\n        if (category) {\n          endpoint += `?category=${encodeURIComponent(category)}`;\n        }\n\n        // 서버에서 API를 호출하여 데이터를 가져옵니다.\n        const response = await fetch(endpoint);\n        if (!response.ok) {\n          const errorText = await response.text(); // HTML 응답을 텍스트로 받기\n          throw new Error(`Error: ${response.status} - ${errorText}`); // 오류 메시지와 함께 응답 내용 출력\n        }\n\n        const data = await response.json();\n        setPosts(data);\n        setError(null); \n      } catch (err) {\n        console.error(\"Error fetching posts:\", err);\n        setPosts([]); \n        setError(err.message); \n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, [category]); // 카테고리 변경 시마다 데이터를 새로 불러옵니다.\n\n  if (loading) {\n    return <div className=\"post-list\">로딩중입니다.</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"post-list\">\n        <h2 style={{ fontWeight: \"bold\", margin: \"20px 0\" }}>{error}</h2>\n      </div>\n    );\n  }\n\n  if (!posts.length) {\n    return (\n      <div className=\"post-list\">\n        <h2 style={{ fontWeight: \"bold\", margin: \"20px 0\" }}>\n          해당 카테고리의 게시글이 없습니다.\n        </h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"post-list\">\n      {category && (\n        <h2 style={{ fontWeight: \"bold\", margin: \"20px 0\" }}>\n          Category: \"{category}\"\n        </h2>\n      )}\n      {posts.map((post) => (\n        <div\n          className=\"post-card\"\n          key={post._id}\n          onClick={() => navigate(`/posts/${post._id}`)}\n        >\n          <h2>{post.title}</h2>\n          <p>Category: {post.category}</p>\n          <img src={faviconImage} className=\"favicon-image\" />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}