{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noh06\\\\Desktop\\\\Theagweb-rest\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../styles/PostList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList({\n  category\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      try {\n        let endpoint = \"/api/posts\";\n\n        // 카테고리 필터만만\n        if (category) {\n          endpoint += `?category=${encodeURIComponent(category)}`;\n        }\n\n        // 서버에서 API를 호출하여 데이터를 가져옵니다.\n        const response = await fetch(endpoint);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        setPosts(data);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error fetching posts:\", err);\n        setPosts([]);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, [category]); // 카테고리 변경 시마다 데이터를 새로 불러옵니다.\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontWeight: \"bold\",\n          margin: \"20px 0\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  if (!posts.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontWeight: \"bold\",\n          margin: \"20px 0\"\n        },\n        children: \"\\uD574\\uB2F9 \\uCE74\\uD14C\\uACE0\\uB9AC\\uC758 \\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: [category && /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontWeight: \"bold\",\n        margin: \"20px 0\"\n      },\n      children: [\"\\uCE74\\uD14C\\uACE0\\uB9AC: \\\"\", category, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), posts.map(post => {\n      var _post$author;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        onClick: () => navigate(`/posts/${post._id}`),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", post.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Reporter: \", ((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.name) || \"Unknown\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Views: \", post.views]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"TkMLCTgq4QJSt38BDvBCFsK26OU=\", false, function () {\n  return [useNavigate];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","PostList","category","_s","posts","setPosts","loading","setLoading","error","setError","navigate","fetchPosts","endpoint","encodeURIComponent","response","fetch","ok","Error","status","data","json","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","margin","length","map","post","_post$author","onClick","_id","title","author","name","views","_c","$RefreshReg$"],"sources":["C:/Users/noh06/Desktop/Theagweb-rest/frontend/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../styles/PostList.css\";\n\nfunction PostList({ category }) {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n\n      try {\n        let endpoint = \"/api/posts\"; \n\n        // 카테고리 필터만만\n        if (category) {\n          endpoint += `?category=${encodeURIComponent(category)}`;\n        }\n\n        // 서버에서 API를 호출하여 데이터를 가져옵니다.\n        const response = await fetch(endpoint);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setPosts(data);\n        setError(null); \n      } catch (err) {\n        console.error(\"Error fetching posts:\", err);\n        setPosts([]); \n        setError(err.message); \n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, [category]); // 카테고리 변경 시마다 데이터를 새로 불러옵니다.\n\n  if (loading) {\n    return <div className=\"post-list\">로딩중입니다.</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"post-list\">\n        <h2 style={{ fontWeight: \"bold\", margin: \"20px 0\" }}>{error}</h2>\n      </div>\n    );\n  }\n\n  if (!posts.length) {\n    return (\n      <div className=\"post-list\">\n        <h2 style={{ fontWeight: \"bold\", margin: \"20px 0\" }}>\n          해당 카테고리의 게시글이 없습니다.\n        </h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"post-list\">\n      {category && (\n        <h2 style={{ fontWeight: \"bold\", margin: \"20px 0\" }}>\n          카테고리: \"{category}\"\n        </h2>\n      )}\n      {posts.map((post) => (\n        <div\n          className=\"post-card\"\n          key={post._id}\n          onClick={() => navigate(`/posts/${post._id}`)}\n        >\n          <h2>{post.title}</h2>\n          <p>Category: {post.category}</p>\n          <p>Reporter: {post.author?.name || \"Unknown\"}</p>\n          <p>Views: {post.views}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}