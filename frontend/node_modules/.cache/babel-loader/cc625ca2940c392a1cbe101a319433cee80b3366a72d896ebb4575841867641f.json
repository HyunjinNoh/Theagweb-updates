{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noh06\\\\Desktop\\\\Theagweb-rest\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport \"./../styles/PostList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList({\n  category\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const keyword = searchParams.get(\"keyword\");\n  const filterBy = searchParams.get(\"filterBy\");\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      try {\n        let endpoint = \"/api/posts\";\n\n        // 검색 조건\n        if (keyword && filterBy) {\n          if (filterBy === \"title\") {\n            endpoint = `/api/posts/search/title?keyword=${encodeURIComponent(keyword)}`;\n          } else if (filterBy === \"author\") {\n            endpoint = `/api/posts/search/author?keyword=${encodeURIComponent(keyword)}`;\n          }\n        }\n\n        // 카테고리 필터 추가\n        if (category) {\n          endpoint += keyword && filterBy ? `&category=${encodeURIComponent(category)}` : `?category=${encodeURIComponent(category)}`;\n        }\n        const response = await fetch(endpoint);\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new Error(`No results found for \"${keyword || category}\".`);\n          }\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        setPosts(data);\n        setError(null); // Clear error\n      } catch (err) {\n        console.error(\"Error fetching posts:\", err);\n        setPosts([]); // Clear posts on error\n        setError(err.message); // Set error message\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, [category, keyword, filterBy]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontWeight: \"bold\",\n          margin: \"20px 0\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  if (!posts.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontWeight: \"bold\",\n          margin: \"20px 0\"\n        },\n        children: [\"No results found for \\\"\", keyword, \"\\\".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: [keyword && /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontWeight: \"bold\",\n        margin: \"20px 0\"\n      },\n      children: [\"Search Results: \\\"\", keyword, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), posts.map(post => {\n      var _post$author;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        onClick: () => navigate(`/posts/${post._id}`),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", post.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", ((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.name) || \"Unknown\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Views: \", post.views]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"asACQ1bTsWFigRdoXjnOvuDfYUY=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","jsxDEV","_jsxDEV","PostList","category","_s","posts","setPosts","loading","setLoading","error","setError","searchParams","navigate","keyword","get","filterBy","fetchPosts","endpoint","encodeURIComponent","response","fetch","ok","status","Error","data","json","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","margin","length","map","post","_post$author","onClick","_id","title","author","name","views","_c","$RefreshReg$"],"sources":["C:/Users/noh06/Desktop/Theagweb-rest/frontend/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport \"./../styles/PostList.css\";\n\nfunction PostList({ category }) {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const keyword = searchParams.get(\"keyword\");\n  const filterBy = searchParams.get(\"filterBy\");\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n\n      try {\n        let endpoint = \"/api/posts\";\n\n        // 검색 조건\n        if (keyword && filterBy) {\n          if (filterBy === \"title\") {\n            endpoint = `/api/posts/search/title?keyword=${encodeURIComponent(keyword)}`;\n          } else if (filterBy === \"author\") {\n            endpoint = `/api/posts/search/author?keyword=${encodeURIComponent(keyword)}`;\n          }\n        }\n\n        // 카테고리 필터 추가\n        if (category) {\n          endpoint += keyword && filterBy ? `&category=${encodeURIComponent(category)}` : `?category=${encodeURIComponent(category)}`;\n        }\n\n        const response = await fetch(endpoint);\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new Error(`No results found for \"${keyword || category}\".`);\n          }\n          throw new Error(`Error: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setPosts(data);\n        setError(null); // Clear error\n      } catch (err) {\n        console.error(\"Error fetching posts:\", err);\n        setPosts([]); // Clear posts on error\n        setError(err.message); // Set error message\n      } finally {\n        setLoading(false);\n      }\n    };\n\n\n    fetchPosts();\n  }, [category, keyword, filterBy]);\n\n  if (loading) {\n    return <div className=\"post-list\">Loading posts...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"post-list\">\n        <h2 style={{ fontWeight: \"bold\", margin: \"20px 0\" }}>{error}</h2>\n      </div>\n    );\n  }\n\n  if (!posts.length) {\n    return (\n      <div className=\"post-list\">\n        <h2 style={{ fontWeight: \"bold\", margin: \"20px 0\" }}>\n          No results found for \"{keyword}\".\n        </h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"post-list\">\n      {keyword && (\n        <h2 style={{ fontWeight: \"bold\", margin: \"20px 0\" }}>\n          Search Results: \"{keyword}\"\n        </h2>\n      )}\n      {posts.map((post) => (\n        <div\n          className=\"post-card\"\n          key={post._id}\n          onClick={() => navigate(`/posts/${post._id}`)}\n        >\n          <h2>{post.title}</h2>\n          <p>Category: {post.category}</p>\n          <p>Author: {post.author?.name || \"Unknown\"}</p>\n          <p>Views: {post.views}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}