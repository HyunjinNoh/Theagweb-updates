{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noh06\\\\Desktop\\\\Theagweb-rest\\\\frontend\\\\src\\\\components\\\\CommentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentList({\n  postId\n}) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState({\n    content: \"\",\n    authorName: \"\"\n  });\n  const [error, setError] = useState(null);\n\n  // 댓글 조회 API 호출\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        console.log(\"Fetching comments for postId:\", postId); // 디버깅 로그 추가\n        const response = await fetch(`http://localhost:7000/api/posts/${postId}/comments`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetched comments:\", data); // 데이터 확인\n        setComments(data); // 댓글 상태 업데이트\n      } catch (err) {\n        console.error(\"Error fetching comments:\", err);\n        setError(err.message);\n      }\n    };\n    fetchComments();\n  }, [postId]);\n  const handleAddComment = async () => {\n    if (!newComment.content || !newComment.authorName) {\n      alert(\"Please fill in both your nickname and comment.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:7000/api/posts/${postId}/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...newComment,\n          postId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to add comment\");\n      }\n      const data = await response.json();\n      setComments([data.comment, ...comments]); // 새 댓글 추가\n      setNewComment({\n        content: \"\",\n        authorName: \"\"\n      }); // 입력 필드 초기화\n    } catch (err) {\n      console.error(\"Error adding comment:\", err);\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nickname\",\n        value: newComment.authorName,\n        onChange: e => setNewComment({\n          ...newComment,\n          authorName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Please add your comment.\",\n        value: newComment.content,\n        onChange: e => setNewComment({\n          ...newComment,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.authorName, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this), \" \", comment.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-timestamp\",\n        children: new Date(comment.createdAt).toLocaleString(\"ko-KR\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no comments yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentList, \"FUeP9/UOCqOhLPJi0/UHT2+F+ok=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CommentList","postId","_s","comments","setComments","newComment","setNewComment","content","authorName","error","setError","fetchComments","console","log","response","fetch","ok","Error","status","data","json","err","message","handleAddComment","alert","method","headers","body","JSON","stringify","comment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["C:/Users/noh06/Desktop/Theagweb-rest/frontend/src/components/CommentList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction CommentList({ postId }) {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState({ content: \"\", authorName: \"\" });\n  const [error, setError] = useState(null);\n\n  // 댓글 조회 API 호출\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        console.log(\"Fetching comments for postId:\", postId); // 디버깅 로그 추가\n        const response = await fetch(`http://localhost:7000/api/posts/${postId}/comments`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetched comments:\", data); // 데이터 확인\n        setComments(data); // 댓글 상태 업데이트\n      } catch (err) {\n        console.error(\"Error fetching comments:\", err);\n        setError(err.message);\n      }\n    };\n\n    fetchComments();\n  }, [postId]);\n\n  const handleAddComment = async () => {\n    if (!newComment.content || !newComment.authorName) {\n      alert(\"Please fill in both your nickname and comment.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:7000/api/posts/${postId}/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ ...newComment, postId }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to add comment\");\n      }\n\n      const data = await response.json();\n      setComments([data.comment, ...comments]); // 새 댓글 추가\n      setNewComment({ content: \"\", authorName: \"\" }); // 입력 필드 초기화\n    } catch (err) {\n      console.error(\"Error adding comment:\", err);\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"comments-section\">\n      <h3>Comments</h3>\n      <div className=\"add-comment\">\n        <input\n          type=\"text\"\n          placeholder=\"Nickname\"\n          value={newComment.authorName}\n          onChange={(e) => setNewComment({ ...newComment, authorName: e.target.value })}\n        />\n        <textarea\n          placeholder=\"Please add your comment.\"\n          value={newComment.content}\n          onChange={(e) => setNewComment({ ...newComment, content: e.target.value })}\n        />\n        <button onClick={handleAddComment}>submit</button>\n      </div>\n      {error && <p className=\"error\">{error}</p>}\n      {comments.length > 0 ? (\n        comments.map((comment) => (\n          <div className=\"comment\" key={comment._id}>\n            <p><strong>{comment.authorName}:</strong> {comment.content}</p>\n            <p className=\"comment-timestamp\">\n              {new Date(comment.createdAt).toLocaleString(\"ko-KR\")}\n            </p>\n          </div>\n        ))\n      ) : (\n        <p>There are no comments yet.</p>\n      )}\n    </div>\n  );\n}\n\nexport default CommentList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}